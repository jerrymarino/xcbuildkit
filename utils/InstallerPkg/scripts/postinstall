#!/bin/bash
set -e

SCRIPTPATH="$( cd "$( dirname "${BASH_SOURCE[0]}"  )" && pwd  )"
pushd "$SCRIPTPATH/.." > /dev/null

SUPPORTED_VERSIONS=(11 12 13)

function install_for_xcode() {
    echo "Installing for Xcode $1"
    BS_DEFAULT_LOCATION="${1}/Contents/SharedFrameworks/XCBuild.framework/PlugIns/XCBBuildService.bundle/Contents/MacOS/XCBBuildService"
    # If someone has Xcode selected an invalid Xcode this won't work.
    if [[ ! -f "$BS_DEFAULT_LOCATION" ]]; then
        echo "Invalid Xcode ${1}" && exit 1
    fi

    BS_INSTALLED_LOCATION="${BS_DEFAULT_LOCATION}.default"
    # Move the original version to the installed location
    if [[ ! -f "$BS_INSTALLED_LOCATION" ]]; then
        mv "$BS_DEFAULT_LOCATION" "$BS_INSTALLED_LOCATION"
    fi

    # Symlink the binary to the default location
    BINARY="$(find "$DSTROOT/Contents/MacOS" -type f | head)"
    if [[ ! -f "$BINARY" ]]; then
        echo "Invalid installer $DSTROOT" && exit 1
    fi
    ln -sf "$BINARY" "$BS_DEFAULT_LOCATION"
}

function main() {
    # Install for all Xcodes for matching version.
    # See xcode-locator.m for more info
    IFS=$'\n'
    ALL_XCODES=( $("$SCRIPTPATH/xcode-locator" 2>&1) )

    for SUPPORTED_VERSION in "${SUPPORTED_VERSIONS[@]}"; do
      SUPPORTED_XCODES=( $(printf '%s\n' "${ALL_XCODES[@]}" | \
      grep "expanded=$SUPPORTED_VERSION" | sed -e 's,.*file://,,g' -e 's,/:.*,,g') )

      for XCODE in "${SUPPORTED_XCODES[@]}"; do
        if [[ -n "$XCODE" ]]; then
          install_for_xcode "$XCODE"
        fi
      done
    done

    RUNNING_XCODES="$(ps ax | grep Contents\/MacOS\/Xcode$ | \
        awk '{$1=$2=$3=$4="";print substr($0,5) }')"
    # Attempt to gracefully quit and re-open Xcode
    # Call quit for each instance of Xcode running, and then re-open
    for RUNNING_XCODE in "${RUNNING_XCODES[@]}"; do
        if [[ -n "$RUNNING_XCODE" ]]; then
            echo "Installer needs to re-launch Xcode ( $RUNNING_XCODE )"
            osascript -e 'quit app "Xcode"' || true
            open "$(dirname "$(dirname "$(dirname "$RUNNING_XCODE")")")"
        fi
    done
}
main "$@"
